<?xml version="1.0" encoding="utf-8"?>
<torgtaitai:CommonPopupWindow
   xmlns:mx="http://www.adobe.com/2006/mxml"
   xmlns:torgtaitai="*" 
   width="690"
   height="540"
   title="title..." 
   showCloseButton="true"
   >
  
  <torgtaitai:ImageSelecter id="imageSelecter" height="100%" width="100%" />
  
  <mx:HBox id="imageListBox" width="100%" height="{Config.fontSize + 5}" 
           paddingRight="0" paddingLeft="0" 
           paddingTop="0" paddingBottom="0" 
           verticalGap="0" horizontalGap="0" 
           >
    <mx:Button id="imageListExtendButon" label="{Language.s.characterWindowImageSetting}" height="{Config.fontSize + 5}" paddingLeft="2" paddingRight="2" fontWeight="nomal" click="extendImageList()" />
    <mx:HBox id="imageListExtendSpace"
             paddingTop="0" paddingBottom="0" 
             width="0" height="0" enabled="false" visible="false">
      <mx:Tile id="imageListSpace" 
               height="65" width="0" minHeight="0" minWidth="0"
               verticalAlign="middle"
               horizontalAlign="center"
               direction="horizontal" 
               borderStyle="solid" 
               paddingTop="1" paddingBottom="1" 
               paddingRight="1" paddingLeft="1" 
               verticalGap="2" horizontalGap="2" 
               tileWidth="50" />
      <mx:Button id="addImageButton" label="{Language.s.addButton}" height="100%" click="addImageListDefault()" />
      <mx:Button id="changeImageButton" label="{Language.s.deleteButton}" height="100%" click="removeImageList()" />
    </mx:HBox>
  </mx:HBox>
  
  <mx:DataGrid id="counterInfoListView"
               width="100%"
               height="{(Config.fontSize + 15) * 2}"
               dataProvider="{counterInfoList}"
               sortableColumns="false"
		       draggableColumns="false"
               enabled="true"
               editable="true"
               showDataTips="true"
               dragEnabled="true"
               >
    <mx:columns>
      
	  <mx:DataGridColumn id="initiativeInt"
                         visible="false"
                         headerText="{Language.s.initiativeWindowColumnTitleInitiative}"
                         editorDataField="value"
                         dataField="initiativeInt"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="30">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
	  <mx:DataGridColumn id="initiativeModify"
                         visible="false"
                         headerText="{Language.s.initiativeWindowColumnTitleInitiativeModify}"
                         editorDataField="value"
                         dataField="initiativeModify"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="90" minimum="-9" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="counter0"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter0"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox0"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox0"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor0}" enabled="{data.checkBoxEnable0}" label="{data.checkBoxLabel0}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
      
	  <mx:DataGridColumn id="counter1"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter1"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox1"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox1"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor1}" enabled="{data.checkBoxEnable1}" label="{data.checkBoxLabel1}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
      
	  <mx:DataGridColumn id="counter2"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter2"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox2"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox2"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor2}" enabled="{data.checkBoxEnable2}" label="{data.checkBoxLabel2}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
      
	  <mx:DataGridColumn id="counter3"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter3"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox3"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox3"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor3}" enabled="{data.checkBoxEnable3}" label="{data.checkBoxLabel3}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
      
	  <mx:DataGridColumn id="counter4"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter4"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox4"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox4"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor4}" enabled="{data.checkBoxEnable4}" label="{data.checkBoxLabel4}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
      
	  <mx:DataGridColumn id="counter5"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter5"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox5"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox5"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor5}" enabled="{data.checkBoxEnable5}" label="{data.checkBoxLabel5}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
      
	  <mx:DataGridColumn id="counter6"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter6"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox6"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox6"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor6}" enabled="{data.checkBoxEnable6}" label="{data.checkBoxLabel6}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
      
	  <mx:DataGridColumn id="counter7"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter7"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox7"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox7"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor7}" enabled="{data.checkBoxEnable7}" label="{data.checkBoxLabel7}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
      
	  <mx:DataGridColumn id="counter8"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter8"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox8"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox8"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor8}" enabled="{data.checkBoxEnable8}" label="{data.checkBoxLabel8}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
      
	  <mx:DataGridColumn id="counter9"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter9"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox9"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox9"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor9}" enabled="{data.checkBoxEnable9}" label="{data.checkBoxLabel9}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
      
	  <mx:DataGridColumn id="counter10"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter10"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox10"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox10"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor10}" enabled="{data.checkBoxEnable10}" label="{data.checkBoxLabel10}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter11"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter11"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox11"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox11"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor11}" enabled="{data.checkBoxEnable11}" label="{data.checkBoxLabel11}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter12"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter12"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox12"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox12"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor12}" enabled="{data.checkBoxEnable12}" label="{data.checkBoxLabel12}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter13"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter13"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox13"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox13"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor13}" enabled="{data.checkBoxEnable13}" label="{data.checkBoxLabel13}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter14"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter14"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox14"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox14"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor14}" enabled="{data.checkBoxEnable14}" label="{data.checkBoxLabel14}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter15"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter15"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox15"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox15"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor15}" enabled="{data.checkBoxEnable15}" label="{data.checkBoxLabel15}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter16"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter16"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox16"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox16"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor16}" enabled="{data.checkBoxEnable16}" label="{data.checkBoxLabel16}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter17"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter17"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox17"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox17"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor17}" enabled="{data.checkBoxEnable17}" label="{data.checkBoxLabel17}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter18"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter18"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox18"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox18"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor18}" enabled="{data.checkBoxEnable18}" label="{data.checkBoxLabel18}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter19"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter19"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox19"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox19"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor19}" enabled="{data.checkBoxEnable19}" label="{data.checkBoxLabel19}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter20"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter20"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox20"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox20"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor20}" enabled="{data.checkBoxEnable20}" label="{data.checkBoxLabel20}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter21"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter21"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox21"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox21"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor21}" enabled="{data.checkBoxEnable21}" label="{data.checkBoxLabel21}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter22"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter22"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox22"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox22"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor22}" enabled="{data.checkBoxEnable22}" label="{data.checkBoxLabel22}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter23"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter23"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox23"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox23"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor23}" enabled="{data.checkBoxEnable23}" label="{data.checkBoxLabel23}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter24"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter24"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox24"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox24"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor24}" enabled="{data.checkBoxEnable24}" label="{data.checkBoxLabel24}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter25"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter25"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox25"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox25"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor25}" enabled="{data.checkBoxEnable25}" label="{data.checkBoxLabel25}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter26"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter26"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox26"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox26"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor26}" enabled="{data.checkBoxEnable26}" label="{data.checkBoxLabel26}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter27"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter27"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox27"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox27"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor27}" enabled="{data.checkBoxEnable27}" label="{data.checkBoxLabel27}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter28"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter28"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox28"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox28"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor28}" enabled="{data.checkBoxEnable28}" label="{data.checkBoxLabel28}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>
	  
	  <mx:DataGridColumn id="counter29"
                         visible="false"
                         headerText=""
                         editorDataField="value"
                         dataField="counter29"
                         textAlign="left"
                         editable="true"
      	                 minWidth="15"
                         width="25">
        <mx:itemEditor>
          <mx:Component>
            <mx:NumericStepper maximum="9999999999" minimum="-9999999999" />
          </mx:Component>
        </mx:itemEditor>
      </mx:DataGridColumn>
      
      <mx:DataGridColumn id="checkBox29"
                         visible="false"
                         headerText=""
                         editorDataField="selected"
                         dataField="checkBox29"
                         textAlign="center"
                         editable="true"
      	                 minWidth="15"
                         width="25"
                         rendererIsEditor="true"
                         >
        <mx:itemRenderer>
          <mx:Component>
            <mx:CheckBox iconColor="{data.columnColor29}" enabled="{data.checkBoxEnable29}" label="{data.checkBoxLabel29}" />
          </mx:Component>
        </mx:itemRenderer>
      </mx:DataGridColumn>

	</mx:columns>
  </mx:DataGrid>
  
  
  <mx:HBox id="inputBox"
           height="135" width="100%" horizontalAlign="center" 
           verticalGap="0"
           horizontalGap="0"
           paddingTop="0"
           paddingBottom="0"
           >
    <mx:Box height="100%" width="300" horizontalAlign="center"
            verticalGap="0"
            horizontalGap="0"
            paddingTop="0"
            paddingBottom="0"
            >
      <mx:Form width="100%"
               paddingTop="0"
               paddingBottom="0"
               >
        <mx:FormItem label="{Language.s.initiativeWindowColumnTitleCharacterName}:"
                     paddingTop="0"
                     >
	      <mx:TextInput id="characterName" width="170" />
        </mx:FormItem>
        
	    <mx:FormItem id="characterImageUrlItem" label="{Language.s.characterImageUrlItem}:">
          <mx:TextInput id="characterImageUrl" width="150" change="printPreview();" editable="true" enabled="false" />
        </mx:FormItem>
      </mx:Form>
      
      <mx:HBox id="characterSizeBox" height="30" width="100%" horizontalAlign="left">
	    <mx:Label text="{Language.s.size}:" />
        <mx:NumericStepper id="characterSize" minimum="1" maximum="10" value="1" />
        
        <mx:Spacer width="10" />
        
        <mx:CheckBox id="isHide" label="" selected="false"
                     height="100%"
                     />
        <mx:Text text="{Language.s.hideCharacterUnderMapMask}" />
      </mx:HBox>
      
      <mx:Form width="100%"
               >
        <mx:FormItem label="{Language.s.characterDataUrl}:" width="100%"
                     toolTip="{Language.s.characterDataUrlTips}"
                     >
	      <mx:TextInput id="url" width="100%" />
        </mx:FormItem>
      </mx:Form>
      
    </mx:Box>
    
    <mx:Box id="otherInfos" height="100%" width="100%" horizontalAlign="center" verticalAlign="middle">
      
      <mx:Box height="100%" width="100%" horizontalAlign="center" verticalAlign="middle">
        <mx:HBox width="100%" horizontalAlign="center" verticalAlign="middle">
          <mx:Label text="{Language.s.initiativeWindowColumnTitleInfo}:" width="100%" />
          <mx:Button id="changeStatusAliasButton"
                     label="■"
                     height="{Config.fontSize + 10}" fontWeight="normal" enabled="false"
                     click="openChangeStatusAliasWindow()" />
        </mx:HBox>
	    <mx:TextArea id="characterOtherInfo" text="" width="100%" height="100%" minHeight="{Config.fontSize + 10}"/>
      </mx:Box>
      
    </mx:Box>
  </mx:HBox>
  
  <mx:HBox height="30" width="100%" horizontalAlign="center" verticalAlign="middle">
    <mx:Button id="executeButton" label="button..." click="this.setCharacterOnButton()"
               enabled="{ (characterImageUrl.text != '') }" />
    <mx:Button label="{Language.s.cancelButton}" click="PopUpManager.removePopUp(this)" />
  </mx:HBox>
  
  <mx:Script>
    <![CDATA[
    [Bindable]
    private var counterInfoList:Array = new Array();
    
    import mx.containers.TitleWindow;
    import mx.managers.PopUpManager;
    import mx.events.FlexEvent;
    import mx.controls.Image;
    import mx.controls.Alert;
    
    public var statusAlias:Object = new Object();
    protected var character:Character;
    
    private var loadingMessage:String = "Loading...";
    private var previewImage:Image = new Image();
    
    
    override protected function setup():void {
        initWindowSizeByFont18(840, 600);
        
        characterImageUrl.text = loadingMessage;
        
        initImageSelecter();
        initCounterColumns();
        initImageList();
        
        init();
    }
    
    private function initImageSelecter():void {
        imageSelecter.addPreview(previewImage, 200);
        imageSelecter.setMirrored(false);
        imageSelecter.setImageClickEventFunction(clickImageEvent);
        imageSelecter.setImageLoadCompleteFunction(loadImageComplete);
        imageSelecter.setDefaultTags( getDefaultTags() );
        imageSelecter.initImage( isLoadInitImageList() );
    }
    
    protected var imageInfos:Array = new Array();
    protected var currentImage:Image;
    
    protected function addImageListDefault():Image {
        var defaultImageUrl:String = "./image/defaultImageSet/pawn/pawnBlack.png";
        var image:Image = addImageList( defaultImageUrl );
        return image;
    }
    
    protected function addImageList(imageUrl:String):Image {
        var image:Image = ImageSelecter.createEmptyImage();
        image.source = Config.getInstance().getUrlString(imageUrl);
        
        var box:Box = ImageSelecter.createImageBox(image);
        box.addEventListener(MouseEvent.CLICK, getClickImageListEvent(box));
        
        imageListSpace.addChild(box);
        var info:Object= {
            "imageBox": box,
            "image":image
        };
        imageInfos.push(info);
        return image;
    }
    
    public function getClickImageListEvent(imageBox:Box):Function {
        return function(event:MouseEvent):void {
            changeBackgroundColor( imageBox );
        }
    }
    
    protected function selectImageList(index:int):void {
        changeBackgroundColor( imageInfos[index].imageBox );
        
    }
    private function changeBackgroundColor(imageBox:Box):void {
        for(var i:int = 0 ; i < imageInfos.length ; i++) {
            var imageInfo:Object = imageInfos[i];
            var targetImageBox:Box = imageInfo.imageBox;
            targetImageBox.setStyle("backgroundColor", ImageSelecter.getNonSelectedColor());
        }
        
        imageBox.setStyle("backgroundColor", ImageSelecter.getSelectedColor());
        
        var index:int = findImageInfoIndex("imageBox", imageBox);
        if( index == -1 ) {
            index = imageInfos.length - 1;
        }
        var info:Object = imageInfos[index];
        
        currentImage = info.image;
        clickImageEvent( info.image.source );
    }
    
    protected function findImageInfoIndex(key:String, obj:Object):int {
        return findImageInfoIndexByActoin( function(imageInfo:Object):Boolean {
                return (imageInfo[key] == obj);
            });
    }
    
    protected function findImageInfoIndexByActoin(action:Function):int {
        for(var i:int = 0 ; i < imageInfos.length ; i++) {
            var imageInfo:Object = imageInfos[i];
            if( action(imageInfo) ) {
                return i;
            }
        }
        
        return -1;
    }
    
    private function removeImageList():void {
        if( imageInfos.length <= 1 ) {
            return;
        }
        
        var index:int = findImageInfoIndex("image", currentImage);
        if( index == -1 ) {
            return;
        }
        
        var info:Object = imageInfos[index];
        imageInfos.splice(index, 1);
        
        try {
            imageListSpace.removeChild( info.imageBox );
        } catch(e:Error) {
        }
        
        var newIndex:int = index;
        var maxIndex:int = (imageInfos.length - 1);
        if( newIndex > maxIndex ) {
            newIndex = maxIndex;
        }
        selectImageList( newIndex );
    }
    
    protected function initImageList():void {
        currentImage = addImageListDefault();
        selectImageList( 0 );
    }
    
    
    protected function isLoadInitImageList():Boolean {
        return true;
    }
    
    protected function getDefaultTags():Array {
        return [
                ImageTag.getNoneTag(),
                ImageTag.getCharacterTag(),
                ImageTag.getAllTag(),
                ];
    }
    
    private function initCounterColumns():void {
        Log.logging("initCounterColumns begin");
        
        var columns:Array = counterInfoListView.columns;
        var checkBoxIndex:int = 0;
        
        for(var i:int = 0 ; i < columns.length; i++) {
            if( i < counterStartIndex ) {
                columns[i].visible = true;
                continue;
            }
            
            var index:int = i - counterStartIndex;
            if( (index % 2) != 0 ) {
                continue;
            }
            
            var counterIndex:int = index / 2;
            var counterColumn:DataGridColumn = columns[i];
            var checkBoxColumn:DataGridColumn = columns[i + 1];
            
            var isCheckBox:Boolean = initCounterColumn(counterIndex, counterColumn, 
                                                       checkBoxIndex, checkBoxColumn);
            if( isCheckBox ) {
                checkBoxIndex++;
            }
        }
        
        Log.logging("initCounterColumns end");
    }
    
    private function initCounterColumn(counterIndex:int, counterColumn:DataGridColumn, 
                                       checkBoxIndex:int, checkBoxColumn:DataGridColumn):Boolean {
        
        var counterNames:Array = DodontoF_Main.getInstance().getRoundTimer().getCounterNames();
        
        if( counterIndex >= counterNames.length ) {
            counterColumn.visible = false;
            checkBoxColumn.visible = false;
            return false;
        }
        
        var counterName:String = counterNames[counterIndex];
        var columnInfo:Object = InitiativeWindow.getColumnInfo(counterName, checkBoxIndex);
        
        var mainColumn:DataGridColumn = null;
        var subColumn:DataGridColumn = null;
        if( columnInfo.isCheckBox ) {
            subColumn = counterColumn;
            mainColumn = checkBoxColumn;
        } else {
            subColumn = checkBoxColumn;
            mainColumn = counterColumn;
        }
        subColumn.visible = false;
        mainColumn.visible = true;
        mainColumn.headerText = columnInfo.title;
        
        //setHeaderColor(mainColumn, columnInfo);
        
        return columnInfo.isCheckBox;
    }
    
    private function setHeaderColor(mainColumn:DataGridColumn, columnInfo:Object):void {
        var headerStyle:CSSStyleDeclaration = new CSSStyleDeclaration;
        headerStyle.setStyle("color", columnInfo.color);
        mainColumn.setStyle("headerStyleName", headerStyle);
    }
    
    public function setCharacter(character_:Character):void {
        character = character_;
    }
    
    
    public function initCounterValues():void {
        Log.logging("initCounterValues this.statusAlias", this.statusAlias);
        
        counterInfoList = new Array();
        changeStatusAliasButtonEnable( false );
        
        var counterNames:Array = DodontoF_Main.getInstance().getRoundTimer().getCounterNames();
        var checkBoxIndex:int = 0;
        var counterInfo:Object = new Object();
        
        for(var i:int = 0 ; i < counterNames.length ; i++) {
            var counterName:String = counterNames[i];
            var isCheckBox:Boolean = initCounterValue(counterName,
                                                      i, checkBoxIndex,
                                                      counterInfo);
            if( isCheckBox ) {
                checkBoxIndex++;
                changeStatusAliasButtonEnable( true );
            }
        }
        
        initInitiative(counterInfo);
        
        counterInfoList.push(counterInfo);
        
        Log.logging("initCounterValues end counterInfoList", counterInfoList);
    }
    
    private function changeStatusAliasButtonEnable(b:Boolean):void {
        changeStatusAliasButton.enabled = b;
        
        if( b ) {
            changeStatusAliasButton.toolTip= Language.s.changeStatusAliasEnable;
        } else {
            changeStatusAliasButton.toolTip= Language.s.changeStatusAliasDisable;
        }
    }
    
    private function initCounterValue(counterName:String,
                                      index:int, checkBoxIndex:int,
                                      counterInfo:Object):Boolean {
        var count:int = (character == null ? 0 : character.getCounter(counterName));
        var columnInfo:Object = InitiativeWindow.getColumnInfo(counterName, checkBoxIndex);
        
        if( columnInfo.isCheckBox ) {
            counterInfo["checkBox" + index] = (count != 0);
            counterInfo["checkBoxEnable" + index] = (character == null ? true : character.hasStatus());
            counterInfo["checkBoxLabel" + index] = getStatusName(counterName);
            counterInfo["columnColor" + index] = columnInfo.color;
        } else {
            counterInfo["counter" + index] = count;
        }
        
        return columnInfo.isCheckBox;
    }
    
    protected function initInitiative(counterInfo:Object):void {
        counterInfo["initiativeInt"] = 0;
        counterInfo["initiativeModify"] = 0;
    }
    
    private function getStatusName(name:String):String {
        var checkBoxInfo:Object = InitiativeWindow.getCheckBoxInfoFromCounterName(name);
        
        var alias:String = this.statusAlias[checkBoxInfo.title];
        if( alias == null ) {
            alias = "";
        }
        return alias;
    }
    
    protected function init():void {
    }
       
    public function clickImageEvent(imageName:String):void {
        var url:String = imageSelecter.getImageUrlChanger().getShort( imageName );
        characterImageUrl.text = url;
        printPreview();
    }
    
    public function loadImageComplete():void {
        if( characterImageUrl.text == loadingMessage ) {
            characterImageUrl.text =  "";
        }
        
        characterImageUrl.text = imageSelecter.getImageUrlChanger().getShort( characterImageUrl.text );
        characterImageUrl.enabled = true;
    }
    
    private var counterStartIndex:int = 2;
    
    private function getCounters(counterInfo:Object):Object {
        var counters:Object = new Object();
        
        var columns:Array = counterInfoListView.columns;
        for(var i:int = 0 ; i < columns.length; i++) {
            if( i < counterStartIndex ) {
                continue;
            }
            var column:DataGridColumn = columns[i];
            var checkBoxColumn:DataGridColumn = columns[i + 1];
            
            var index:int = i - counterStartIndex;
            
            if( (index % 2) != 0 ) {
                continue;
            }
            
            var counterIndex:int = index / 2;
            if( checkBoxColumn.visible ) {
                var value:int = (counterInfo["checkBox" + counterIndex] ? 1 : 0);
                Log.logging("checkBoxColumn.headerText", checkBoxColumn.headerText)
                Log.logging("value", value);
                counters[ "*" + checkBoxColumn.headerText ] = value;
            } else {
                var counter:int = counterInfo["counter" + counterIndex];
                Log.logging("column.headerText", column.headerText)
                Log.logging("counter", counter);
                counters[column.headerText] = counter;
            }
        }
        
        return counters;
    }
    
    public function setCharacterOnButton():void {
        Log.logging("CharacterWindow.setCharacterOnButton Begin");
        try{
            var imageUrl:String = imageSelecter.getImageUrlChanger().getLong( characterImageUrl.text );
            var images:Array = getImages();
            var mirrored:Boolean = imageSelecter.isMirrored();
            var counters:Object = new Object();
            
            var counterInfo:Object = counterInfoList[0];
            if( counterInfo != null ) {
                counters = getCounters(counterInfo);
            }
            Log.logging("counters", counters);
            
            var initiativeInt:int = counterInfo["initiativeInt"]
            var initiativeModify:int = counterInfo["initiativeModify"]
            var initiative:Number = Utils.getInitiative(initiativeInt, initiativeModify);
            
            sendCharacterData(
                              characterName.text,
                              imageUrl,
                              images,
                              mirrored,
                              characterSize.value,
                              isHide.selected,
                              initiative,
                              characterOtherInfo.text,
                              counters, 
                              statusAlias,
                              url.text);
            
            PopUpManager.removePopUp(this);
            
        } catch(error:Error) {
            Log.loggingError("CharacterWindow.setCharacterOnButton Error");
            this.status = error.message;
        }
        Log.logging("CharacterWindow.setCharacterOnButton End");
    }

    private function getImages():Array {
        var images:Array = new Array();
        
        for(var i:int = 0 ; i < imageInfos.length ; i++) {
            images.push( imageInfos[i].image.source );
        }
        
        return images;
    }
    
    public function sendCharacterData(name:String,
                                      imageUri:String,
                                      images:Array,
                                      mirrored:Boolean,
                                      size:int,
                                      isHide:Boolean,
                                      initiative:Number,
                                      info:String,
                                      counters:Object,
                                      statusAlias:Object,
                                      url:String):void {
    }
       
    protected function printPreview():void {
        Log.logging("printPreview characterImageUrl.text", characterImageUrl.text);
        var imageUrl:String = imageSelecter.getImageUrlChanger().getLong( characterImageUrl.text );
        Log.logging("imageUrl", imageUrl);
        previewImage.source = imageUrl;
        currentImage.source = imageUrl;
    }
    
    public function openChangeStatusAliasWindow():void {
        var window:ChangeStatusAliasWindow = DodontoF.popup(ChangeStatusAliasWindow, true) as ChangeStatusAliasWindow;
        window.setCharacterWindow( this );
    }
    
    private function extendImageList():void {
        imageListExtendButon.visible = false;
        imageListExtendButon.enabled = false;
        imageListExtendButon.width = 0;
        
        imageListExtendSpace.visible = true;
        imageListExtendSpace.enabled = true;
        imageListExtendSpace.width = 650;
        imageListSpace.width = imageListExtendSpace.width
           - addImageButton.width - changeImageButton.width - 20;
        imageListExtendSpace.height = 68;
        
        imageListBox.height = imageListExtendSpace.height;
        this.height += imageListBox.height;
    }
    
    ]]>
  </mx:Script>
  
</torgtaitai:CommonPopupWindow>
